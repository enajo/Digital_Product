// .devcontainer/devcontainer.json
{
  "name": "QuickDoc Devcontainer",

  // path from .devcontainer/ to your compose file:
  "dockerComposeFile": ["../docker-compose.dev.yml"],

  // attach VS Code to your Flask service:
  "service": "backend",

  // where your code lives inside the container:
  "workspaceFolder": "/app",

  // spin up all three services together:
  "runServices": ["db", "backend", "frontend"],

  // tear them down when you close:
  "shutdownAction": "stopCompose",

  // ports to forward for browser access:
  "forwardPorts": [5000, 5173],

  // install Python & JS deps once after build:
  "postCreateCommand": "pip install -r backend/requirements.txt && npm install --prefix frontend",

  // every time you start (or rebuild) the Codespace:
  // 1) if migrations folder is missing, init + generate an “initial schema” migration  
  // 2) apply all migrations to bring your schema up to date  
  // 3) finally, boot your React dev server
  "postStartCommand": [
    // go into the Flask app folder
    "cd backend",

    // only initialize Alembic & scaffold your very first migration if there's no migrations folder
    "if [ ! -d migrations ]; then flask db init; flask db migrate -m \"initial schema\"; fi",

    // apply all pending migrations
    "flask db upgrade",

    // come back out and start the React server
    "cd ../frontend && npm run dev -- --host 0.0.0.0 --port 5173"
  ].join(" && "),

  // give you the Docker extension to inspect containers
  "extensions": [
    "ms-azuretools.vscode-docker"
  ]
}
